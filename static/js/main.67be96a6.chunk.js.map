{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","filterValue","selectValue","handleChange","event","target","name","value","setState","handleUserSelect","this","props","todos","filter","todo","completed","title","includes","className","type","placeholder","onChange","map","classNames","key","id","checked","readOnly","onClick","userId","React","Component","requestUser","fetch","then","res","json","user","data","CurrentUser","currentUser","prevProps","email","phone","clear","App","selectedUserId","todosFromServ","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67be96a6.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport \"./TodoList.scss\";\n\nexport class TodoList extends React.Component {\n  state = {\n    filterValue: \"\",\n    selectValue: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { handleUserSelect } = this.props;\n    let { todos } = this.props;\n    const { filterValue, selectValue } = this.state;\n\n    if (selectValue === \"active\") {\n      todos = this.props.todos.filter((todo) => todo.completed === false);\n    }\n\n    if (selectValue === \"completed\") {\n      todos = this.props.todos.filter((todo) => todo.completed === true);\n    }\n\n    if (filterValue) {\n      todos = this.props.todos.filter((todo) =>\n        todo.title.includes(this.state.filterValue)\n      );\n    }\n\n    return (\n      <div className=\"TodoList\">\n        <input\n          name=\"filterValue\"\n          type=\"text\"\n          placeholder=\"enter a todo\"\n          value={this.state.filterValue}\n          onChange={this.handleChange}\n        />\n        <select\n          name=\"selectValue\"\n          value={this.state.selectValue}\n          onChange={this.handleChange}\n        >\n          <option value=\"all\">all</option>\n          <option value=\"active\">active</option>\n          <option value=\"completed\">completed</option>\n        </select>\n        <h2>Todos:</h2>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos.map((todo) => (\n              <li\n                className={classNames(\n                  `TodoList__item ${\n                    todo.completed\n                      ? \"TodoList__item--checked\"\n                      : \"TodoList__item--unchecked\"\n                  }`\n                )}\n                key={todo.id}\n              >\n                <label>\n                  <input type=\"checkbox\" checked={todo.completed} readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n                  type=\"button\"\n                  onClick={() => handleUserSelect(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleUserSelect: PropTypes.func.isRequired,\n};\n","const url = `https://mate-api.herokuapp.com/todos`;\nconst usersUrl = `https://mate-api.herokuapp.com/users/`;\n\nexport function request() {\n  return fetch(url)\n    .then(res => res.json())\n    .then(todos => todos.data);\n}\n\nexport function requestUser(id) {\n  return fetch(`${usersUrl}${id}`)\n    .then(res => res.json())\n    .then(user => user.data);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { requestUser } from '../../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    currentUser: null,\n  }\n\n  componentDidMount() {\n    requestUser(this.props.userId)\n      .then(user => this.setState({ currentUser: user }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      requestUser(this.props.userId)\n        .then(user => this.setState({ currentUser: user }));\n    }\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    if (currentUser) {\n      return (\n        <>\n          <div className=\"CurrentUser\">\n            <h2 className=\"CurrentUser__title\">\n              <span>\n                Selected user:\n                {currentUser.id}\n              </span>\n            </h2>\n            <h3 className=\"CurrentUser__name\">\n              {' '}\n              {currentUser.name}\n              {' '}\n            </h3>\n            <p className=\"CurrentUser__email\">{currentUser.email}</p>\n            <p className=\"CurrentUser__phone\">{currentUser.phone}</p>\n          </div>\n          <button\n            type=\"button\"\n            onClick={() => this.props.clear()}\n\n          >\n            {' '}\n            clear\n            {' '}\n          </button>\n        </>\n      );\n    }\n\n    return (`not user yet`);\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clear: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { request } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: null,\n  };\n\n  componentDidMount() {\n    request()\n      .then(todosFromServ => this.setState({ todos: todosFromServ }));\n  }\n\n  handleUserSelect = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clear = () => {\n    this.setState({ selectedUserId: null });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            handleUserSelect={userId => this.handleUserSelect(userId)}\n            todos={todos}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clear={() => this.clear()}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}